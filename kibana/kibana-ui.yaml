apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:533267367927:certificate/9c804ac7-c2a5-4efa-9d0e-ee0eb262965f
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "15"
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "5"
    alb.ingress.kubernetes.io/healthy-threshold-count: "2"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443},{"HTTP":80}]'
    alb.ingress.kubernetes.io/load-balancer-name: ingress-kibana
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/success-codes: "200"
    alb.ingress.kubernetes.io/unhealthy-threshold-count: "2"
    external-dns.alpha.kubernetes.io/hostname: "kibanan1.533267367927.realhandsonlabs.net, kibana2.533267367927.realhandsonlabs.net"
  creationTimestamp: "2024-02-24T00:14:17Z"
  finalizers:
  - ingress.k8s.aws/resources
  generation: 1
  name: ingress-kibana
  namespace: default
  resourceVersion: "1956"
  uid: 9c2bc0b0-b343-4b8c-a464-261c48c33fda
spec:
  defaultBackend:
    service:
      name: kibana-kibana
      port:
        number: 5601
  ingressClassName: my-aws-ingress-class
status:
  loadBalancer: {}
